{
    "System.OutputLevel": "Error",
    "System.Configuration": "Release",
    "System.ModuleRoot": "./",
    "System.TemplatesRoot": "templates",
    "System.AssembliesRoot": "lib",
    "System.PythonScriptsRoot": "python_scripts",
    "System.PythonVenvRoot": "python_venv",
    "System.Templates": [
        {
            "name": "C# Template",
            "path": "csharp",
            "description": "Templates for creating either a console app, or a library."
        },
        {
            "name": "EditorConfig",
            "path": "editorconfig",
            "exportedFilename": ".editorconfig",
            "description":"An EditorConfig file helps maintain consistent coding styles for multiple developers working on the same project across various editors and IDEs. The EditorConfig project consists of a file format for defining coding styles and a collection of text editor plugins that enable editors to read the file format and adhere to defined styles. EditorConfig files are easily readable and they work nicely with version control systems."
        },
        {
            "name": "eslintrc JS",
            "path": "eslintrc_js",
            "exportedFilename": "eslintrc.js",
            "description": "You can put your ESLint project configuration in a configuration file. You can include built-in rules, how you want them enforced, plugins with custom rules, shareable configurations, which files you want rules to apply to, and more."
        },
        {
            "name": "eslintrc JSON",
            "path": "eslintrc_json",
            "exportedFilename": "eslintrc.json",
            "description": "You can put your ESLint project configuration in a configuration file. You can include built-in rules, how you want them enforced, plugins with custom rules, shareable configurations, which files you want rules to apply to, and more."
        },
        {
            "name": "Extendscript Template",
            "path": "extendscript",
            "description": "Starter templates for creating Adobe ExtendScript scripts"
        },
        {
            "name": "Gitignore",
            "path": "gitignore",
            "exportedFilename": ".gitignore",
            "description": "A gitignore file specifies intentionally untracked files that Git should ignore. Files already tracked by Git are not affected"
        },
        {
            "name": "jsconfig.json",
            "path": "jsconfigjson",
            "exportedFilename": "jsconfig.json",
            "description": "The presence of jsconfig.json file in a directory indicates that the directory is the root of a JavaScript Project. The jsconfig.json file specifies the root files and the options for the features provided by the JavaScript language service."
        },
        {
            "name": "tsconfig.json",
            "path": "tsconfigjson",
            "exportedFilename": "tsconfig.json",
            "description": "The presence of a tsconfig.json file in a directory indicates that the directory is the root of a TypeScript project. The tsconfig.json file specifies the root files and the compiler options required to compile the project."
        },
        {
            "name": "License File",
            "path": "license",
            "exportedFilename": "LICENSE",
            "metadata": "metadata.json",
            "description": "GitHub licenses are important for open-source projects because they set the legal terms and conditions for using, distributing, and modifying the software. They allow others to contribute and improve the software, build a community around the project and also protect the rights of the software users. They also ensure that open-source software remains available to all."
        },
        {
            "name": "Omnisharp.json",
            "path": "omnisharpjson",
            "exportedFilename": "omnisharp.json",
            "description": "The omnisharp.json file is a configuration file used by OmniSharp to manage settings and preferences for .NET development environments, particularly those that don't have out-of-the-box .NET support. This configuration file allows you to customize how OmniSharp behaves in your workspace. It can include settings for things like code formatting, build configurations, and analyzers. By tweaking these settings, you can tailor the development environment to your specific needs or the standards of your project."
        },
        {
            "name": "Powershell Module",
            "path": "powershellmodule",
            "exportedFilename": "none",
            "description": "Auto Generates a .psm1 module file, and a .psd1 manifest, pre-populated with your custom variables."
        },
        {
            "name": ".prettierignore",
            "path": "prettierignore",
            "exportedFilename": ".prettierignore",
            "description": "A .prettierignore file is used to ignore (i.e. not reformat) certain files and folders completely."
        },
        {
            "name": ".prettierrc",
            "path": "prettierrc",
            "exportedFilename": ".prettierrc",
            "description": "A .prettierrc file specifies the options you want Prettier to use when formatting your code. The choices you can set in this file include the number of spaces for indentation, whether to use single quotes or double quotes for strings, and whether to insert semicolons at the end of statements."
        },
        {
            "name": "Python VENV Commands",
            "path": "python_venv_install",
            "exportedFilename": "none",
            "description": "Pre-populated files with the exact pip install commands to build a target virtual environment."
        },
        {
            "name": "Python VENV",
            "path": "python_venv_environments",
            "exportedFilename": "none",
            "description": "Pre-populated requirements files that are passed to pip to create an exact virtual environment."
        },
        {
            "name": "README",
            "path": "readme",
            "exportedFilename": "README.md",
            "description": "A README.md file describing your project."
        },
        {
            "name": "SVGO Config",
            "path": "svgo_config_mjs",
            "exportedFilename": "svgo.config.mjs",
            "description": "A svgo.config.mjs file allows you to specify optimization options and plugins to use or disable during the SVG optimization process with SVGO."
        },
        {
            "name": "VSCode Extension",
            "path": "vscode-extension",
            "exportedFilename": "none",
            "description": "VSCode Extension Boilerplates are pre-populated project structures tailored to the specific type of extension you want to create."
        }
    ]
}